{
  "Twitter:tweet:create:create like retweet delete search": {
    "path": "test-workflows/workflows/1.json",
    "integration": "Twitter"
  },
  "PagerDuty:incident:create get update getAll:incidentNote:create getAll:User:get:LogEntry:getAll get": {
    "path": "test-workflows/workflows/10.json",
    "integration": "PagerDuty"
  },
  "RenameKeys": {
    "path": "test-workflows/workflows/101.json",
    "integration": ""
  },
  "ReadBinaryFile": {
    "path": "test-workflows/workflows/102.json",
    "integration": ""
  },
  "ExecuteCommand": {
    "path": "test-workflows/workflows/103.json",
    "integration": ""
  },
  "ReadPDF": {
    "path": "test-workflows/workflows/104.json",
    "integration": ""
  },
  "WriteBinaryFile": {
    "path": "test-workflows/workflows/105.json",
    "integration": ""
  },
  "Box:Folder:create search get delete:File:upload get download copy search delete": {
    "path": "test-workflows/workflows/106.json",
    "integration": "Box"
  },
  "ReadBinaryFiles": {
    "path": "test-workflows/workflows/107.json",
    "integration": ""
  },
  "Merge:append keepKeyMatches mergeByIndex(leftjoin,innerjoin,outerjoin) mergeByKey(ifBlank,always,ifMissing) Multiplex passThrough removeKeyMatches": {
    "path": "test-workflows/workflows/108.json",
    "integration": ""
  },
  "Customerio:Campaign:get getMettrics geAll:Customer:upsert delete:Event:track trackAnonymous:Segment:add remove": {
    "path": "test-workflows/workflows/109.json",
    "integration": "Customerio"
  },
  "Mailchimp:Member:getall get create update delete:Member Tag:create delete:ListGroup:getAll:Campaign:getAll get replicate delete": {
    "path": "test-workflows/workflows/11.json",
    "integration": "Mailchimp"
  },
  "GraphQL": {
    "path": "test-workflows/workflows/110.json",
    "integration": ""
  },
  "Spreadsheet File": {
    "path": "test-workflows/workflows/111.json",
    "integration": ""
  },
  "Rabbitmq:queue:exchange": {
    "path": "test-workflows/workflows/112.json",
    "integration": "Rabbitmq"
  },
  "AMQP": {
    "path": "test-workflows/workflows/113.json",
    "integration": ""
  },
  "Monday:Board:create get getAll archive:BoardColumn:create getAll:BoardGroup:create delete getAll:BoardItem:create addUpdate changeColumnValue get getAll getByColumnValue move delete": {
    "path": "test-workflows/workflows/114.json",
    "integration": "Monday"
  },
  "Cockpit:Collection:createEntry updateEntry getAllEntries:Singleton:get:Form:submit": {
    "path": "test-workflows/workflows/115.json",
    "integration": "Cockpit"
  },
  "Ghost:Post(Admin API):create update get getAll delete:Post(Content API):getAll get": {
    "path": "test-workflows/workflows/116.json",
    "integration": "Ghost"
  },
  "Gotify:Message:create getAll delete": {
    "path": "test-workflows/workflows/117.json",
    "integration": "Gotify"
  },
  "Redis:info set keys get delete": {
    "path": "test-workflows/workflows/118.json",
    "integration": "Redis"
  },
  "CrateDB:insert update executeQuery": {
    "path": "test-workflows/workflows/119.json",
    "integration": "CrateDB"
  },
  "MySQL:insert update executeQuery": {
    "path": "test-workflows/workflows/120.json",
    "integration": "MySQL"
  },
  "Mautic:Company:create update get getAll delete:Contact:create update get getAll delete:ContactCompany:add remove": {
    "path": "test-workflows/workflows/121.json",
    "integration": "Mautic"
  },
  "Orbit:Member:upsert get update delete getAll lookup:Note:create update getAll:Activity:create getAll:Post:create getAll delete": {
    "path": "test-workflows/workflows/122.json",
    "integration": "Orbit"
  },
  "MongoDB:insert find update delete": {
    "path": "test-workflows/workflows/123.json",
    "integration": "MongoDB"
  },
  "QuestDB: insert executeQuery": {
    "path": "test-workflows/workflows/124.json",
    "integration": "QuestDB"
  },
  "Postgres: insert update executeQuery": {
    "path": "test-workflows/workflows/125.json",
    "integration": "Postgres"
  },
  "Kafka": {
    "path": "test-workflows/workflows/126.json",
    "integration": ""
  },
  "Rundeck:Job:execute getMetadata": {
    "path": "test-workflows/workflows/127.json",
    "integration": "Rundeck"
  },
  "Yourls:Url:shorten stats expand": {
    "path": "test-workflows/workflows/128.json",
    "integration": "Yourls"
  },
  "NextCloud:NextCloud:Folder:create move copy delete list:File:upload move copy download delete": {
    "path": "test-workflows/workflows/129.json",
    "integration": "NextCloud"
  },
  "Wekan:Board:create get getAll delete:List:create get getAll delete:Card:create update get getAll delete:CardComment:create get getAll delete:CheckList:create get getAll delete:CheckListItem:get update delete": {
    "path": "test-workflows/workflows/130.json",
    "integration": "Wekan"
  },
  "Line:Notification:send": {
    "path": "test-workflows/workflows/131.json",
    "integration": "Line"
  },
  "Mandrill:Message:sendTemplate sendHTML": {
    "path": "test-workflows/workflows/132.json",
    "integration": "Mandrill"
  },
  "Twilio:SMS:send": {
    "path": "test-workflows/workflows/133.json",
    "integration": "Twilio"
  },
  "TravisCI:Build:trigger getAll get restart cancel": {
    "path": "test-workflows/workflows/134.json",
    "integration": "TravisCI"
  },
  "Cortex:Analyzer:execute:Job:report get:Responder:execute": {
    "path": "test-workflows/workflows/135.json",
    "integration": "Cortex"
  },
  "Pushbullet:Push:create update getAll delete": {
    "path": "test-workflows/workflows/136.json",
    "integration": "Pushbullet"
  },
  "TheHive[v3]:Alert:create update get getAll promote merge:Case:create update get getAll:Observable:create update get search getAll:Task:create update get search getAll:Log:create get getAll": {
    "path": "test-workflows/workflows/137.json",
    "integration": "TheHive[v3]"
  },
  "TheHive[v4]:Alert:create update get getAll promote merge:Case:create update get getAll:Observable:create update get search getAll:Task:create update get search getAll:Log:create get getAll": {
    "path": "test-workflows/workflows/138.json",
    "integration": "TheHive[v4]"
  },
  "Shopify:Product:create update get getAll delete:Order:create update get getAll delete": {
    "path": "test-workflows/workflows/139.json",
    "integration": "Shopify"
  },
  "Mailgun": {
    "path": "test-workflows/workflows/140.json",
    "integration": ""
  },
  "MicrosoftExcel:Table:lookup getRows getColumns addRow:Workbook:addWorksheet getAll:Worksheet:getAll getContent": {
    "path": "test-workflows/workflows/141.json",
    "integration": "MicrosoftExcel"
  },
  "MicrosoftOutlook:Folder:create get getAll getChildren delete:Message send getAll get getMime update delete:FolderMessage:getAll:Draft:create update get delete send:MessageAttachment:add getAll get download": {
    "path": "test-workflows/workflows/142.json",
    "integration": "MicrosoftOutlook"
  },
  "Clearbit:Company:enrich autocomplete:Person:enrich": {
    "path": "test-workflows/workflows/143.json",
    "integration": "Clearbit"
  },
  "APITemplate.io:Account:get:Image:create:PDF:create": {
    "path": "test-workflows/workflows/144.json",
    "integration": "APITemplate.io"
  },
  "Peekalink:isAvailable preview": {
    "path": "test-workflows/workflows/145.json",
    "integration": "Peekalink"
  },
  "TimescaleDB:insert update executeQuery": {
    "path": "test-workflows/workflows/146.json",
    "integration": "TimescaleDB"
  },
  "Raindrop:User:get:Collection:create get update getAll delete:Bookmark:create get update getAll delete:Tag:getAll delete": {
    "path": "test-workflows/workflows/147.json",
    "integration": "Raindrop"
  },
  "Deepl:Language:translate": {
    "path": "test-workflows/workflows/148.json",
    "integration": "Deepl"
  },
  "Reddit:User:get:Subreddit:get getAll:Profile:get:Post:create get getAll search delete:PostComment:create getAll reply delete": {
    "path": "test-workflows/workflows/149.json",
    "integration": "Reddit"
  },
  "DropBox:File: upload move copy download delete": {
    "path": "test-workflows/workflows/15.json",
    "integration": "DropBox"
  },
  "PostHog:Event:create:Identity:create:Alias:create:Track:page screen": {
    "path": "test-workflows/workflows/150.json",
    "integration": "PostHog"
  },
  "Wise:Account:getStatement getBalances getCurrencies:ExchangeRate:get:Profile:get getAll:Recipient:getAll:Quote:create get:Transfer:create get getAll execute delete": {
    "path": "test-workflows/workflows/151.json",
    "integration": "Wise"
  },
  "AWSComprehend:Text:detectDominantLanguage detectSentiment detectEntities": {
    "path": "test-workflows/workflows/152.json",
    "integration": "AWSComprehend"
  },
  "AWSLambda:invoke": {
    "path": "test-workflows/workflows/153.json",
    "integration": "AWSLambda"
  },
  "AWSRekognition:Image:analyze": {
    "path": "test-workflows/workflows/154.json",
    "integration": "AWSRekognition"
  },
  "AWSS3:Bucket:create getAll search:File:upload getAll download delete:Folder:create getAll delete": {
    "path": "test-workflows/workflows/155.json",
    "integration": "AWSS3"
  },
  "AWSSNS:publish": {
    "path": "test-workflows/workflows/156.json",
    "integration": "AWSSNS"
  },
  "AWSSES:Template:create geAll get update delete:Email:sendTemplate send:CustomVerificationEmail:create get getAll update delete": {
    "path": "test-workflows/workflows/157.json",
    "integration": "AWSSES"
  },
  "MicrosoftSQL:insert update executeQuery": {
    "path": "test-workflows/workflows/158.json",
    "integration": "MicrosoftSQL"
  },
  "Tapfiliate:Affiliate:create getAll get delete:ProgramAffiliate:add disapprove approve get getAll:AffiliateMetaData:add update remove": {
    "path": "test-workflows/workflows/159.json",
    "integration": "Tapfiliate"
  },
  "OpenWeatherMap:: current-weather 5-day-forecast": {
    "path": "test-workflows/workflows/16.json",
    "integration": "OpenWeatherMap"
  },
  "Wordpress:User:getAll get create update:Post:create get getAll update": {
    "path": "test-workflows/workflows/160.json",
    "integration": "Wordpress"
  },
  "Vonage:SMS:send": {
    "path": "test-workflows/workflows/161.json",
    "integration": "Vonage"
  },
  "AWSSQS:sendMessage": {
    "path": "test-workflows/workflows/162.json",
    "integration": "AWSSQS"
  },
  "GoogleSlides:Presentation:create get getSlides replaceText:Page:get getThumbnail": {
    "path": "test-workflows/workflows/163.json",
    "integration": "GoogleSlides"
  },
  "ClickUp:SpaceTag:create getAll update delete:TaskTag:add remove:TaskList:add remove": {
    "path": "test-workflows/workflows/164.json",
    "integration": "ClickUp"
  },
  "Emelia:Campaign:create addContact get getAll start pause:ContactList:getAll add": {
    "path": "test-workflows/workflows/165.json",
    "integration": "Emelia"
  },
  "Intercom:Company:create get getAll update users:Lead:create get getAll update delete:User:create get getAll update delete": {
    "path": "test-workflows/workflows/166.json",
    "integration": "Intercom"
  },
  "FreshDesk:Contact:create get update getAll delete:Ticket:create get getAll update delete": {
    "path": "test-workflows/workflows/167.json",
    "integration": "FreshDesk"
  },
  "Demio:Event:getAll get register:Report:get": {
    "path": "test-workflows/workflows/168.json",
    "integration": "Demio"
  },
  "Mocean:SMS:send": {
    "path": "test-workflows/workflows/169.json",
    "integration": "Mocean"
  },
  "OpenThesaurus:: Get Synonyms": {
    "path": "test-workflows/workflows/17.json",
    "integration": "OpenThesaurus"
  },
  "Xero:Contact:create get getAll update:Invoice:create get getAll update": {
    "path": "test-workflows/workflows/170.json",
    "integration": "Xero"
  },
  "Stackby:append read list delete": {
    "path": "test-workflows/workflows/171.json",
    "integration": "Stackby"
  },
  "Paypal:Payout:create get:PayoutItem:get": {
    "path": "test-workflows/workflows/172.json",
    "integration": "Paypal"
  },
  "GetResponse:Contact:create getAll get update delete": {
    "path": "test-workflows/workflows/173.json",
    "integration": "GetResponse"
  },
  "Vero:User:create alias addTags removeTags unsubscribe resubscribe delete:Event:track": {
    "path": "test-workflows/workflows/174.json",
    "integration": "Vero"
  },
  "uProc:Audio:*:company:*;": {
    "path": "test-workflows/workflows/176.json",
    "integration": "uProc"
  },
  "uProc:Finance:*;": {
    "path": "test-workflows/workflows/177.json",
    "integration": "uProc"
  },
  "uProc:Image:*:Security:*;": {
    "path": "test-workflows/workflows/179.json",
    "integration": "uProc"
  },
  "uProc:Internet:*;": {
    "path": "test-workflows/workflows/180.json",
    "integration": "uProc"
  },
  "Webflow:Item:create get update delete getAll": {
    "path": "test-workflows/workflows/182.json",
    "integration": "Webflow"
  },
  "Telegram:Chat:get setDescription setTitle member:Message: sendMessage editMessageText pinChatMessage unpinChatMessage sendPhoto sendSticker sendMediaGroup sendChatAction sendLocation sendDocument sendAudio sendAnimation sendVideo:File:get": {
    "path": "test-workflows/workflows/183.json",
    "integration": "Telegram"
  },
  "Salesforce:Account:create get addNote getAll getSummary update delete:Case:create get addComment getAll getSummary update delete:Attachment:create get getAll getSummary update delete": {
    "path": "test-workflows/workflows/184.json",
    "integration": "Salesforce"
  },
  "Salesforce:Lead:create get addNote addToCampaign getAll getSummary update delete:Contact:create get addNote addToCampaign getAll getSummary update delete:CustomObject:create get getAll update delete:Flow:getAll": {
    "path": "test-workflows/workflows/185.json",
    "integration": "Salesforce"
  },
  "Salesforce:Opportunity:create get addNote getAll getSummary update delete:Task:create get getAll getSummary update delete:Query:search": {
    "path": "test-workflows/workflows/186.json",
    "integration": "Salesforce"
  },
  "Strapi:Entry:create get getAll update delete": {
    "path": "test-workflows/workflows/187.json",
    "integration": "Strapi"
  },
  "Uplead:Company:enrich:Person:enrich": {
    "path": "test-workflows/workflows/188.json",
    "integration": "Uplead"
  },
  "Affinity:Organization:create get update delete getAll:List:getAll get:ListEntry:create get getAll delete:Person:create get update getAll delete": {
    "path": "test-workflows/workflows/189.json",
    "integration": "Affinity"
  },
  "SentryIo:Organization:create get getAll update:Team:create get getAll update delete:Project:create getAll get update delete:Issue:getAll get update:Event:getAll get:Release:create get getAll update delete": {
    "path": "test-workflows/workflows/19.json",
    "integration": "SentryIo"
  },
  "Discourse:User:create get getAll:Category:create update getAll:Group:create update get getAll:UserGroup:add remove:Post:create update get getAll": {
    "path": "test-workflows/workflows/190.json",
    "integration": "Discourse"
  },
  "Mailerlite:Subscriber:create get update getAll": {
    "path": "test-workflows/workflows/191.json",
    "integration": "Mailerlite"
  },
  "Mattermost:Channel:create addUser members statistics delete restore:Message:post postEphemeral delete:Reaction:create getAll delete:User:create getById getByEmail getAll invite deactive": {
    "path": "test-workflows/workflows/192.json",
    "integration": "Mattermost"
  },
  "ChargeBee:Customer:create:Invoice:list pdfUrl": {
    "path": "test-workflows/workflows/193.json",
    "integration": "ChargeBee"
  },
  "Mailjet:Email:send sendTemplate": {
    "path": "test-workflows/workflows/194.json",
    "integration": "Mailjet"
  },
  "Kitemaker:Organization:get:Space:getAll:User:getAll:WorkItem:create get getAll update": {
    "path": "test-workflows/workflows/195.json",
    "integration": "Kitemaker"
  },
  "QuickBooks:Bill:create get update getAll delete:Item:getAll:get:Vendor:create get getAll update:Employee:create get update getAll:Customer:create get update getAll:Estimate:create get update getAll send delete:Invoice:create get update getAll send delete:Payment:create get update getAll send delete": {
    "path": "test-workflows/workflows/196.json",
    "integration": "QuickBooks"
  },
  "MQTT:sendMessage": {
    "path": "test-workflows/workflows/197.json",
    "integration": "MQTT"
  },
  "GoogleCloudFirestore:Document:create get upset getAll query delete:Collection:getAll": {
    "path": "test-workflows/workflows/198.json",
    "integration": "GoogleCloudFirestore"
  },
  "MailCheck:Email:check": {
    "path": "test-workflows/workflows/199.json",
    "integration": "MailCheck"
  },
  "Hubspot:Contact:upsert getall search getRecentlyCreatedUpdated get delete:Company:getall searchByDomain getRecentlyCreated update getRecentlyModified delete": {
    "path": "test-workflows/workflows/20.json",
    "integration": "Hubspot"
  },
  "Pipedrive:Activity:create get update getAll delete:Deal:create get update duplicate getAll delete:Person:create get update getAll search delete:File:create get download delete:Organization:create get update getAll delete:Note:create get update getAll delete": {
    "path": "test-workflows/workflows/200.json",
    "integration": "Pipedrive"
  },
  "Iterable:User:upsert get delete:UserList:add remove:Event:track": {
    "path": "test-workflows/workflows/201.json",
    "integration": "Iterable"
  },
  "Beeminder:Datapoint:create getAll update delete": {
    "path": "test-workflows/workflows/202.json",
    "integration": "Beeminder"
  },
  "Paddle:Payment:getAll reschedule:Plan:getAll get:Product:getAll:Coupon:create update getAll:User:getAll": {
    "path": "test-workflows/workflows/203.json",
    "integration": "Paddle"
  },
  "HelpScout:Mailbox:getAll get:Customer:create get update getAll properties:Conversation:create get getAll delete:Thread:create getAll": {
    "path": "test-workflows/workflows/204.json",
    "integration": "HelpScout"
  },
  "Pushover:Message:push": {
    "path": "test-workflows/workflows/205.json",
    "integration": "Pushover"
  },
  "Keap:Company:create getAll:Contact:upsert get getAll delete:ContactNote:create get update getAll delete:ContactTag:create getAll delete": {
    "path": "test-workflows/workflows/206.json",
    "integration": "Keap"
  },
  "Keap:EcommerceOrder:create get getAll delete:EcommerceProduct:create get getAll delete:Email:createRecord getAll:File:upload getAll delete": {
    "path": "test-workflows/workflows/207.json",
    "integration": "Keap"
  },
  "RocketChat:Chat:postMessage": {
    "path": "test-workflows/workflows/208.json",
    "integration": "RocketChat"
  },
  "AWS Transcribe:TranscriptionJob:create get getAll delete": {
    "path": "test-workflows/workflows/209.json",
    "integration": "AWS Transcribe"
  },
  "Hubspot:Deal: create update getall search getRecentlyModified getRecentlyCreated get delete:Ticket: create update get All get delete": {
    "path": "test-workflows/workflows/21.json",
    "integration": "Hubspot"
  },
  "Git:*": {
    "path": "test-workflows/workflows/212.json",
    "integration": "Git"
  },
  "Discord:sendMessage": {
    "path": "test-workflows/workflows/214.json",
    "integration": "Discord"
  },
  "EditImage:ALL": {
    "path": "test-workflows/workflows/215.json",
    "integration": "EditImage"
  },
  "FunctionItem:JSON,Binary and Static data": {
    "path": "test-workflows/workflows/216.json",
    "integration": "FunctionItem"
  },
  "ExecuteWorkflow: Database, URL, Local File, Parameter": {
    "path": "test-workflows/workflows/217.json",
    "integration": "ExecuteWorkflow"
  },
  "Bannerbear:Image:create get:Template:get getAll": {
    "path": "test-workflows/workflows/218.json",
    "integration": "Bannerbear"
  },
  "Automizy:List:create get update getAll delete:Contact:create get update getAll delete": {
    "path": "test-workflows/workflows/219.json",
    "integration": "Automizy"
  },
  "Hubspot:ContactList:add remove:Form:getFields submit": {
    "path": "test-workflows/workflows/22.json",
    "integration": "Hubspot"
  },
  "Autopilot:List:create getAll:Contact:upsert get getAll delete:ContactList:add exist getAll remove": {
    "path": "test-workflows/workflows/220.json",
    "integration": "Autopilot"
  },
  "Copper:Company:*:Person:*:Opportunity:*:Project:*:Task:*:CustomerSource:getAll:User:getAll": {
    "path": "test-workflows/workflows/221.json",
    "integration": "Copper"
  },
  "Lemlist:Lead:create get unsubscribe delete:Campaign:getAll:Activity:getAll:Team:get:Unsubscribe:add getAll delete": {
    "path": "test-workflows/workflows/222.json",
    "integration": "Lemlist"
  },
  "LingvaNex:Translate": {
    "path": "test-workflows/workflows/223.json",
    "integration": "LingvaNex"
  },
  "QuickBase:Record:create update getAll upsert:Report:run get:Field:getAll:File:download": {
    "path": "test-workflows/workflows/224.json",
    "integration": "QuickBase"
  },
  "Salesmate:Company:*:Deal:*:Activity:*": {
    "path": "test-workflows/workflows/225.json",
    "integration": "Salesmate"
  },
  "UnleashedSoftware:SakesOrder:getAll:StockOnHand:getAll get": {
    "path": "test-workflows/workflows/226.json",
    "integration": "UnleashedSoftware"
  },
  "Flow:Task:create get getAll update": {
    "path": "test-workflows/workflows/227.json",
    "integration": "Flow"
  },
  "GoogleDrive:Folder:create share delete:File:upload share list download copy delete copy (RL)": {
    "path": "test-workflows/workflows/229.json",
    "integration": "GoogleDrive"
  },
  "CredentialOnlyNodes": {
    "path": "test-workflows/workflows/230.json",
    "integration": ""
  },
  "HTTP:InvalidHostHeader HTTP:CrossDomainRedirect": {
    "path": "test-workflows/workflows/231.json",
    "integration": "HTTP"
  },
  "QdrantVectorStore:*": {
    "path": "test-workflows/workflows/233.json",
    "integration": "QdrantVectorStore"
  },
  "BasicLLMChain:MistralChat": {
    "path": "test-workflows/workflows/234.json",
    "integration": "BasicLLMChain"
  },
  "SummarizationChain:Simple:Map": {
    "path": "test-workflows/workflows/235.json",
    "integration": "SummarizationChain"
  },
  "SummarizationChain:Simple:Map:Binary": {
    "path": "test-workflows/workflows/236.json",
    "integration": "SummarizationChain"
  },
  "BasicLLMChain:AzureChat": {
    "path": "test-workflows/workflows/237.json",
    "integration": "BasicLLMChain"
  },
  "BasicLLMChain:OpenAIInstruct": {
    "path": "test-workflows/workflows/238.json",
    "integration": "BasicLLMChain"
  },
  "Agent:PlanAndExecute": {
    "path": "test-workflows/workflows/239.json",
    "integration": "Agent"
  },
  "SummarizationChain:Simpe:Refine": {
    "path": "test-workflows/workflows/240.json",
    "integration": "SummarizationChain"
  },
  "Agent:OpenAiFunctions": {
    "path": "test-workflows/workflows/241.json",
    "integration": "Agent"
  },
  "BasicLLMChain:OutputParser": {
    "path": "test-workflows/workflows/242.json",
    "integration": "BasicLLMChain"
  },
  "Agent:ReAct": {
    "path": "test-workflows/workflows/243.json",
    "integration": "Agent"
  },
  "Agent:WorkflowTool": {
    "path": "test-workflows/workflows/244.json",
    "integration": "Agent"
  },
  "BasicLLMChain:AwsBedrockChat": {
    "path": "test-workflows/workflows/245.json",
    "integration": "BasicLLMChain"
  },
  "BasicLLMChain:OpenAIChat": {
    "path": "test-workflows/workflows/246.json",
    "integration": "BasicLLMChain"
  },
  "SummarizationChain:Advanced:Map": {
    "path": "test-workflows/workflows/247.json",
    "integration": "SummarizationChain"
  },
  "InMemoryVectorStore:*": {
    "path": "test-workflows/workflows/248.json",
    "integration": "InMemoryVectorStore"
  },
  "SummarizationChain:Simple:Stuff": {
    "path": "test-workflows/workflows/249.json",
    "integration": "SummarizationChain"
  },
  "PineconeVectorStore:*": {
    "path": "test-workflows/workflows/250.json",
    "integration": "PineconeVectorStore"
  },
  "Agent:Conversational": {
    "path": "test-workflows/workflows/251.json",
    "integration": "Agent"
  },
  "vectorStorePGVector:*": {
    "path": "test-workflows/workflows/252.json",
    "integration": "vectorStorePGVector"
  },
  "Agent:Tools:OpenAI": {
    "path": "test-workflows/workflows/253.json",
    "integration": "Agent"
  },
  "Agent:Tools:Anthropic": {
    "path": "test-workflows/workflows/254.json",
    "integration": "Agent"
  },
  "Sub-node errors:model": {
    "path": "test-workflows/workflows/255.json",
    "integration": "Sub-node errors"
  },
  "Nested sub-node errors:model": {
    "path": "test-workflows/workflows/256.json",
    "integration": "Nested sub-node errors"
  },
  "Agent:auto-fix:anthropic": {
    "path": "test-workflows/workflows/257.json",
    "integration": "Agent"
  },
  "Agent:auto-fix:openai": {
    "path": "test-workflows/workflows/258.json",
    "integration": "Agent"
  },
  "ChainQA": {
    "path": "test-workflows/workflows/259.json",
    "integration": ""
  },
  "ClickUp:Folder:create update getAll get delete:Goal:create update getAll get delete:GoalKeyResult:create update delete": {
    "path": "test-workflows/workflows/26.json",
    "integration": "ClickUp"
  },
  "ClickUp:Task:create update member getAll get delete:List:create update customFields member getAll get delete": {
    "path": "test-workflows/workflows/27.json",
    "integration": "ClickUp"
  },
  "ClickUp:CheckList:create update delete:CheckListItem:create update delete": {
    "path": "test-workflows/workflows/28.json",
    "integration": "ClickUp"
  },
  "ClickUp:Comment:create update getAll delete": {
    "path": "test-workflows/workflows/29.json",
    "integration": "ClickUp"
  },
  "ClickUp:TaskDependency:create delete": {
    "path": "test-workflows/workflows/30.json",
    "integration": "ClickUp"
  },
  "ClickUp:TimeEntry:create update start stop getall get delete:TimeEntryTag: add getAll remove": {
    "path": "test-workflows/workflows/31.json",
    "integration": "ClickUp"
  },
  "Drif:Contact:create update get delete": {
    "path": "test-workflows/workflows/32.json",
    "integration": "Drif"
  },
  "Zoom:Meeting:create update getAll get delete": {
    "path": "test-workflows/workflows/33.json",
    "integration": "Zoom"
  },
  "Strava:Activity:create get update getAll getComments getKudos getLaps": {
    "path": "test-workflows/workflows/34.json",
    "integration": "Strava"
  },
  "Slack:User:getPresence info:UserProfile:get update:Message:post getPermalink update postEphermera l delete:Reaction:add get remove": {
    "path": "test-workflows/workflows/35.json",
    "integration": "Slack"
  },
  "Slack:File:upload getAll get:Star:add getAll delete:Channgel:create update setPurpose setTopic ge t invite leave join getAll history replies member archive unarchive": {
    "path": "test-workflows/workflows/36.json",
    "integration": "Slack"
  },
  "GitLab:Repository:get getIssues:Issue:create createComment edit get lock:Release:create get getAll update delete:User:getRepositories": {
    "path": "test-workflows/workflows/37.json",
    "integration": "GitLab"
  },
  "Medium:Post:create:Publication:getall": {
    "path": "test-workflows/workflows/38.json",
    "integration": "Medium"
  },
  "Github:Repository:get getProfile getLicense listPopularPaths listReferrers:File:create edit get delete:Issue:create createComment edit get lock:Release:create get getAll update delete:User:getRepositories invite:Review:create getAll get update": {
    "path": "test-workflows/workflows/39.json",
    "integration": "Github"
  },
  "FTP:ftp:list download upload": {
    "path": "test-workflows/workflows/4.json",
    "integration": "FTP"
  },
  "Gmail:Draft:create getAll get delete:Label:create getAll get delete:Message:send getAll get reply delete:MessageLabel:add remove": {
    "path": "test-workflows/workflows/40.json",
    "integration": "Gmail"
  },
  "GoogleCalendar:Event:create getAll get update delete:Calendar:availability": {
    "path": "test-workflows/workflows/41.json",
    "integration": "GoogleCalendar"
  },
  "GoogleTask:create update getAll get delete": {
    "path": "test-workflows/workflows/42.json",
    "integration": "GoogleTask"
  },
  "GoogleContacts:create update getAll get delete": {
    "path": "test-workflows/workflows/43.json",
    "integration": "GoogleContacts"
  },
  "GoogleDrive:Folder:create share delete:File:upload share list download copy delete": {
    "path": "test-workflows/workflows/44.json",
    "integration": "GoogleDrive"
  },
  "GoogleSheets:SpreadSheet:create:Sheet:create append read lookup update delete clean remove": {
    "path": "test-workflows/workflows/45.json",
    "integration": "GoogleSheets"
  },
  "GoogleBooks:Volume:getAll get:BookShelf:getAll get:BookShelfVolume:add move getAll remove clear": {
    "path": "test-workflows/workflows/46.json",
    "integration": "GoogleBooks"
  },
  "Airtable:append update read list delete": {
    "path": "test-workflows/workflows/47.json",
    "integration": "Airtable"
  },
  "Asana:Project:getAll get:Task:create update move getAll get delete:TaskComment:add remove:TaskTag:add remove:TaskProject:add remov e:SubTask:create getAll:User:get getAll": {
    "path": "test-workflows/workflows/48.json",
    "integration": "Asana"
  },
  "Bitly:Link:create get update": {
    "path": "test-workflows/workflows/49.json",
    "integration": "Bitly"
  },
  "Hackernews:All:getAll:Article:get:User:get": {
    "path": "test-workflows/workflows/5.json",
    "integration": "Hackernews"
  },
  "Brandfetch:color company font logo industry": {
    "path": "test-workflows/workflows/50.json",
    "integration": "Brandfetch"
  },
  "Clockify:Project:create update get getAll:Tag:create update getAll delete:TimeEntry:create update get delete": {
    "path": "test-workflows/workflows/51.json",
    "integration": "Clockify"
  },
  "Coda:Table:getAllColumns getColumn getAllRows getRow createRow pushButton deleteRow:View:getAll get getAllViewColumns getAllViewRows updateViewRow pushViewButto n:Formula:get getAll:Control:get getAll": {
    "path": "test-workflows/workflows/52.json",
    "integration": "Coda"
  },
  "ConvertKit:CustomField:create getAll update delete:Form:getAll addSubscriber getSubscriptions:Tag:create getAll:TagSubscriber:add getAll delete": {
    "path": "test-workflows/workflows/53.json",
    "integration": "ConvertKit"
  },
  "InvoiceNinja:Client:create getAll get delete:Expense:create getAll get delete:Invoice:create getAll get email delete:Payment:create get getAll delete:Quote:crea te getAll get email delete:Task:create getAll get delete": {
    "path": "test-workflows/workflows/54.json",
    "integration": "InvoiceNinja"
  },
  "Hunter: domainSearch emailFinder emailVerifier": {
    "path": "test-workflows/workflows/55.json",
    "integration": "Hunter"
  },
  "Trello:Board:*List:*Card:*Label:*CardComment:*Attachment:*CheckList:*": {
    "path": "test-workflows/workflows/56.json",
    "integration": "Trello"
  },
  "Mindee:receipt:predict:invoice:predict": {
    "path": "test-workflows/workflows/57.json",
    "integration": "Mindee"
  },
  "Todoist:Task:create get close reopen getAll delete": {
    "path": "test-workflows/workflows/58.json",
    "integration": "Todoist"
  },
  "SendGrid:List:create update get getAll delete:Contact:upsert getAll get delete:mail:send": {
    "path": "test-workflows/workflows/59.json",
    "integration": "SendGrid"
  },
  "Static files workflow": {
    "path": "test-workflows/workflows/6.json",
    "integration": ""
  },
  "Taiga:Issue:create update get getAll delete": {
    "path": "test-workflows/workflows/60.json",
    "integration": "Taiga"
  },
  "Spotify:Artist:get getAlbums getRelatedArtists getTopTracks:Album:get getNewReleases getTracks:Track:get getAudioFeatures:Playlist:create getUserPlaylists get add getTracks delete:Player:recentylPlayed currentlyPlaying:Library:getLikedTracks": {
    "path": "test-workflows/workflows/61.json",
    "integration": "Spotify"
  },
  "ProfitWell:Company:getSetting:Metric:getMontly getDaily": {
    "path": "test-workflows/workflows/62.json",
    "integration": "ProfitWell"
  },
  "Segment:Identify:create:Track:event page": {
    "path": "test-workflows/workflows/63.json",
    "integration": "Segment"
  },
  "SIGNL4:Alert:send resolve": {
    "path": "test-workflows/workflows/64.json",
    "integration": "SIGNL4"
  },
  "Spontit:Push:create": {
    "path": "test-workflows/workflows/65.json",
    "integration": "Spontit"
  },
  "Storyblok:Story:get getAll publish unpublish": {
    "path": "test-workflows/workflows/66.json",
    "integration": "Storyblok"
  },
  " Twist:Channel:create update get getAll archive unarchive delete:MessageConversation:create get getAll update delete:Thread:create get update getAll delete:Comment:create get update getAll delete": {
    "path": "test-workflows/workflows/67.json",
    "integration": " Twist"
  },
  "CircleCI:Pipeline:getAll get trigger": {
    "path": "test-workflows/workflows/68.json",
    "integration": "CircleCI"
  },
  "CoinGecko:Coin:get getAll  history candlesick market marketChart price ticker:Event:getAll": {
    "path": "test-workflows/workflows/69.json",
    "integration": "CoinGecko"
  },
  "Contentful-delivery-api:locale:getAll:entry:getAll:ContentType:get:Asset:getAll get:Space:get": {
    "path": "test-workflows/workflows/70.json",
    "integration": "Contentful-delivery-api"
  },
  "Contentful-preview-api:locale:getAll:entry:getAll:ContentType:get:Asset:getAll get:Space:get": {
    "path": "test-workflows/workflows/71.json",
    "integration": "Contentful-preview-api"
  },
  "Zulip:Message:sendPrivate update updateFile sendStream get delete:Stream:create getAll getSubscribed update delete:user:getAll get update": {
    "path": "test-workflows/workflows/72.json",
    "integration": "Zulip"
  },
  "Youtube:Channel:get getAll update:Playlist:create update getAll get delete:PlaylistItem:add getAll get delete:videoCategory:getAll:Video:rate get upload update delete": {
    "path": "test-workflows/workflows/73.json",
    "integration": "Youtube"
  },
  "E-goi:Contact:create get getAll update": {
    "path": "test-workflows/workflows/74.json",
    "integration": "E-goi"
  },
  "Harvest:Client:create update getAll get delete:Invoice:create update getAll get delete:Contact:create update get getAll delete:Company:get": {
    "path": "test-workflows/workflows/75.json",
    "integration": "Harvest"
  },
  "Harvest:Project:create update getAll get delete:Task:getAll get:TimeEntry:createByDuration createByStartEnd update getAll restartTime stopTime delete:User:me get getAll update": {
    "path": "test-workflows/workflows/76.json",
    "integration": "Harvest"
  },
  "Harvest:Expense:create update get getAll delete:Estimate:create update get getAll delete": {
    "path": "test-workflows/workflows/77.json",
    "integration": "Harvest"
  },
  "NASA:ALL:": {
    "path": "test-workflows/workflows/78.json",
    "integration": "NASA"
  },
  "ZohoCRM:Lead:create update get getAll delete getFields": {
    "path": "test-workflows/workflows/79.json",
    "integration": "ZohoCRM"
  },
  "Zendesk:Ticket:create update get getAll delete:TicketField:getAll get:User:create update getAll search get delete": {
    "path": "test-workflows/workflows/80.json",
    "integration": "Zendesk"
  },
  "PhantomBuster:getAll get launch getOutput": {
    "path": "test-workflows/workflows/81.json",
    "integration": "PhantomBuster"
  },
  "Microsoft OneDrive:Folder:create getChildren share search delete:File:upload get share download copy delete search": {
    "path": "test-workflows/workflows/82.json",
    "integration": "Microsoft OneDrive"
  },
  "RSS Feed": {
    "path": "test-workflows/workflows/83.json",
    "integration": ""
  },
  "Matrix:Room:create invite kick leave:RoomMember:getAll:Message:create getAll:Account:me:Media:upload:Event:get": {
    "path": "test-workflows/workflows/84.json",
    "integration": "Matrix"
  },
  "Linkedin:Post:create": {
    "path": "test-workflows/workflows/85.json",
    "integration": "Linkedin"
  },
  "ActiveCampaign:Contact:create update get getAll delete:Account:create update get getAll delete:AccountContact:create update delete:ContactTag:add remove:ContactList:add remove": {
    "path": "test-workflows/workflows/86.json",
    "integration": "ActiveCampaign"
  },
  "ActiveCampaign:Deal:create update get createNote updateNote getAll delete:Tag:create update get getAll delete:Connection:create update get getAll delete:List:getAll": {
    "path": "test-workflows/workflows/87.json",
    "integration": "ActiveCampaign"
  },
  "ActiveCampaign:EcommerceCustomer:create update get getAll delete:EcommerceOrder:create update get getAll delete:EcommerceOrderProduct:getByProductId getByOrderId getAll": {
    "path": "test-workflows/workflows/88.json",
    "integration": "ActiveCampaign"
  },
  "S3:Bucket:create getAll search:File:upload getAll download copy delete:Folder:create getAll delete": {
    "path": "test-workflows/workflows/89.json",
    "integration": "S3"
  },
  "Date&Time:formatDate": {
    "path": "test-workflows/workflows/90.json",
    "integration": "Date&Time"
  },
  "HTML Extract:json binary": {
    "path": "test-workflows/workflows/91.json",
    "integration": "HTML Extract"
  },
  "IF": {
    "path": "test-workflows/workflows/92.json",
    "integration": ""
  },
  "Move Binary Data:toJSON:toBinary": {
    "path": "test-workflows/workflows/93.json",
    "integration": "Move Binary Data"
  },
  "XML:toJSON:toXML": {
    "path": "test-workflows/workflows/94.json",
    "integration": "XML"
  },
  "Set": {
    "path": "test-workflows/workflows/95.json",
    "integration": ""
  },
  "MessageBird:Sms:send:Balance:get": {
    "path": "test-workflows/workflows/96.json",
    "integration": "MessageBird"
  },
  "Crypto": {
    "path": "test-workflows/workflows/97.json",
    "integration": ""
  },
  "Disqus:Forum:get getCategories getThreads getPosts": {
    "path": "test-workflows/workflows/98.json",
    "integration": "Disqus"
  }
}